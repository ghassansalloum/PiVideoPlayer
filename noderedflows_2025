[{"id":"abad9a88ca0d6f8d","type":"tab","label":"Prod","disabled":false,"info":"","env":[]},{"id":"84c542040034d2c2","type":"group","z":"abad9a88ca0d6f8d","name":"Emit name of chosen episode - for Home Assistant's dashboard","style":{"label":true},"nodes":["f3ed82aa14152584","5fce7e5dd9224f2c","614515168d71178a","596391fe7b3f5847","a2eff87653e53d73","2b68fbbeeddc4423","30a3fc1b1baa444b","a1b72512a9617549","5f225c2ead2d6aef","02f7f2b8ddfe2322","09e477eb3d366fc1","d28276fbe4c28b7d","aeb9693662fa6b9d","3fb08d77d6d1e0c5"],"x":654,"y":159,"w":732,"h":342},{"id":"50f3b47b1d62d456","type":"group","z":"abad9a88ca0d6f8d","name":"Pick random episode when invoked","style":{"label":true},"nodes":["function_pick_random","69199788a63ffebd","d07147c9e3559671","64a778f5f842ccab","39ccc8c63aaea7fd","7780ca1ff63e28f2","inject_pick_random","01850a0e7c90f579","b8fb5788d174801a","52ea5801cb6006e9","42220720a19274df","c57c29c6c311acad","f4f72916cf154949"],"x":14,"y":139,"w":632,"h":282},{"id":"7af0599b75ce96bf","type":"group","z":"abad9a88ca0d6f8d","name":"Play the chosen video","style":{"label":true},"nodes":["0ee5394a19ec2f9d","fa0416a1027484fb","10292665f314fc6c","0bdf25ad2db8b823","a9237caf8c926fae"],"x":14,"y":431.5,"w":632,"h":129.5},{"id":"9aa3ae0427508409","type":"group","z":"abad9a88ca0d6f8d","name":"Init","style":{"label":true},"nodes":["inject_list_files","exec_list_files","function_assign_global","debug_list_files"],"x":14,"y":31.5,"w":792,"h":97},{"id":"ff624337f71e6c66","type":"group","z":"abad9a88ca0d6f8d","name":"Stop video - pkill","style":{"label":true},"nodes":["49232eca1c1b13cc","92bcad8254dbf885","751d51dfcded41f7","9e34b4a2c405b0b6","01dbddaf82aed932","f4e3f433d82ec260","98c6b875a92557b4"],"x":14,"y":579,"w":632,"h":182},{"id":"8e0e14a4a8ae4da8","type":"group","z":"abad9a88ca0d6f8d","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["46541e988de47929","3a1639b38e613dbb","67678a223dc5bf97","332bb8d08ca5a6d5","a34c56cbb99ba96c"],"x":14,"y":779,"w":632,"h":182},{"id":"c946b06561167483","type":"group","z":"abad9a88ca0d6f8d","name":"Select a speaker dynamically","style":{"label":true},"nodes":["e82f75d15068b8af","exec_list_sinks","parse_sinks","inject_refresh","d420207c890384ef","4663ad632b405356","c346c5e47d77aea3","519df851393b7b2f","bceef0c471bbe0b5","2b42826c5a303544","32744de9ed5bdf1e"],"x":654,"y":519,"w":552,"h":342},{"id":"f95d023b77de1473","type":"group","z":"abad9a88ca0d6f8d","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["exec_check_playing","inject_play_status","switch_play_status","set_stopped","set_playing","ui_play_status"],"x":654,"y":919,"w":642,"h":222},{"id":"c57c29c6c311acad","type":"junction","z":"abad9a88ca0d6f8d","g":"50f3b47b1d62d456","x":560,"y":240,"wires":[["b8fb5788d174801a","5fce7e5dd9224f2c"]]},{"id":"inject_list_files","type":"inject","z":"abad9a88ca0d6f8d","g":"9aa3ae0427508409","name":"List Files","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":120,"y":80,"wires":[["exec_list_files"]]},{"id":"exec_list_files","type":"exec","z":"abad9a88ca0d6f8d","g":"9aa3ae0427508409","command":"find /home/pi/vids/ -maxdepth 1 -type f -iname \"s*\" | sort","addpay":false,"append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"find","x":270,"y":80,"wires":[["function_assign_global"],[],[]]},{"id":"function_assign_global","type":"function","z":"abad9a88ca0d6f8d","g":"9aa3ae0427508409","name":"Assign to Global Array","func":"// Initialize an empty array to store file paths\nlet filePaths = [];\n\n// Check if the exec node returned stdout\nif (msg.payload) {\n    // Split the stdout by newlines to get individual file paths\n    filePaths = msg.payload.split('\\n').filter(line => line.trim() !== '');\n}\n\n// Assign the array to a global context variable\nglobal.set('filePaths', filePaths);\n\n// Optionally, you can pass a confirmation message\nmsg.payload = `Found ${filePaths.length} files.`;\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":460,"y":80,"wires":[["debug_list_files"]]},{"id":"debug_list_files","type":"debug","z":"abad9a88ca0d6f8d","g":"9aa3ae0427508409","name":"List Files Debug","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"payload","statusType":"auto","x":680,"y":80,"wires":[]},{"id":"function_pick_random","type":"function","z":"abad9a88ca0d6f8d","g":"50f3b47b1d62d456","name":"Pick @rand","func":"// Retrieve the global array of file paths\nlet filePaths = global.get('filePaths');\n\n// Check if the array exists and has elements\nif (Array.isArray(filePaths) && filePaths.length > 0) {\n    // Generate a random index\n    let randomIndex = Math.floor(Math.random() * filePaths.length);\n\n    // Get the random file path\n    let randomFile = filePaths[randomIndex];\n\n    // Escape the file path or wrap it in quotes for safe usage in the command line\n    let escapedFilePath = `\"${randomFile.replace(/([\"\\\\$`])/g, '\\\\$1')}\"`;\n\n    // Assign it to msg.payload\n    msg.VideoToPlay = [escapedFilePath, null];\n} else {\n    // Handle the case where the array is empty or undefined\n    msg.VideoToPlay = [null, 'No files available to pick.'];\n}\n\nglobal.set(\"LatestVideo\", msg.VideoToPlay[0])\n\nreturn msg;\n","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":300,"wires":[["c57c29c6c311acad"],["01850a0e7c90f579"]]},{"id":"69199788a63ffebd","type":"rpi-gpio in","z":"abad9a88ca0d6f8d","g":"50f3b47b1d62d456","name":"Key 1","pin":"21","intype":"up","debounce":"25","read":false,"bcm":true,"x":110,"y":300,"wires":[["d07147c9e3559671"]]},{"id":"d07147c9e3559671","type":"delay","z":"abad9a88ca0d6f8d","g":"50f3b47b1d62d456","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":true,"allowrate":false,"outputs":1,"x":290,"y":300,"wires":[["function_pick_random"]]},{"id":"64a778f5f842ccab","type":"comment","z":"abad9a88ca0d6f8d","g":"50f3b47b1d62d456","name":"Play Frasier","info":"This is the routine to play a Frasier episode when pressing Key 1","x":130,"y":180,"wires":[]},{"id":"39ccc8c63aaea7fd","type":"mqtt in","z":"abad9a88ca0d6f8d","g":"50f3b47b1d62d456","name":"1","topic":"frasier","qos":"2","datatype":"utf8","broker":"7ad2277394b478ef","nl":false,"rap":true,"rh":0,"inputs":0,"x":110,"y":380,"wires":[["7780ca1ff63e28f2"]]},{"id":"7780ca1ff63e28f2","type":"switch","z":"abad9a88ca0d6f8d","g":"50f3b47b1d62d456","name":"if 'play'","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"play","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":240,"y":380,"wires":[["d07147c9e3559671"]]},{"id":"inject_pick_random","type":"inject","z":"abad9a88ca0d6f8d","g":"50f3b47b1d62d456","name":"Pick Random File","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"date","x":140,"y":260,"wires":[["d07147c9e3559671"]]},{"id":"0ee5394a19ec2f9d","type":"exec","z":"abad9a88ca0d6f8d","g":"7af0599b75ce96bf","command":"pkill vlc","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"pkill vlc","x":160,"y":480,"wires":[["fa0416a1027484fb","10292665f314fc6c"],[],[]]},{"id":"f3ed82aa14152584","type":"mqtt out","z":"abad9a88ca0d6f8d","g":"84c542040034d2c2","name":"Latest episode","topic":"LastFrasierEpisode","qos":"","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"7ad2277394b478ef","x":960,"y":320,"wires":[]},{"id":"5fce7e5dd9224f2c","type":"change","z":"abad9a88ca0d6f8d","g":"84c542040034d2c2","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"VideoToPlay[0]","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":760,"y":200,"wires":[["614515168d71178a"]]},{"id":"614515168d71178a","type":"change","z":"abad9a88ca0d6f8d","g":"84c542040034d2c2","name":"","rules":[{"t":"change","p":"payload","pt":"msg","from":"/home/pi/vids/Frasier/","fromt":"str","to":"","tot":"str"},{"t":"change","p":"payload","pt":"msg","from":".avi","fromt":"str","to":"","tot":"str"},{"t":"change","p":"payload","pt":"msg","from":".mkv","fromt":"str","to":"","tot":"str"},{"t":"change","p":"payload","pt":"msg","from":"\"","fromt":"str","to":"","tot":"str"},{"t":"change","p":"payload","pt":"msg","from":".mp4","fromt":"str","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":960,"y":200,"wires":[["596391fe7b3f5847"]]},{"id":"596391fe7b3f5847","type":"function","z":"abad9a88ca0d6f8d","g":"84c542040034d2c2","name":"Parse data","func":"// Use a regular expression to split the payload on the first dash, with or without surrounding spaces\nlet parts = msg.payload.split(/ - |-(?!.* - )/);\n\n// Initialize an object to hold the extracted values\nlet result = {\n    season: \"\",\n    episode: \"\",\n    title: \"\"\n};\n\nif (parts.length >= 2) {\n    // The first part before the dash is assumed to be 'SxxExx'\n    let seasonEpisode = parts[0];\n    // Attempt to further split season and episode\n    let seasonEpisodeParts = seasonEpisode.match(/S(\\d+)E(\\d+)/i);\n    if (seasonEpisodeParts && seasonEpisodeParts.length === 3) {\n        result.season = seasonEpisodeParts[1];\n        result.episode = seasonEpisodeParts[2];\n    } else {\n        // Handle cases where the season/episode format doesn't match\n        result.season = \"Unknown\";\n        result.episode = \"Unknown\";\n    }\n\n    // Everything after the dash is the title\n    result.title = parts.slice(1).join(' - ').trim();\n} else {\n    // In case the string doesn't properly split, set a default or handle as error\n    result.title = \"Invalid format - \" + msg.payload;\n}\n\n// Assign the result object to msg.payload\nmsg.payload = result;\n\n// Return the message object to continue the flow\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":770,"y":260,"wires":[["f3ed82aa14152584","a2eff87653e53d73","2b68fbbeeddc4423","02f7f2b8ddfe2322","09e477eb3d366fc1"]]},{"id":"a2eff87653e53d73","type":"debug","z":"abad9a88ca0d6f8d","g":"84c542040034d2c2","name":"","active":false,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"payload","statusType":"auto","x":950,"y":260,"wires":[]},{"id":"fa0416a1027484fb","type":"exec","z":"abad9a88ca0d6f8d","g":"7af0599b75ce96bf","command":"XDG_RUNTIME_DIR=/run/user/1000 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus /usr/bin/cvlc --file-caching=10000  --no-fb-tty --vout fb --fbdev=/dev/fb0 --width 240 --quiet ","addpay":"VideoToPlay[0]","append":"--play-and-exit","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"CVLC","x":330,"y":480,"wires":[[],["a9237caf8c926fae"],[]]},{"id":"01850a0e7c90f579","type":"debug","z":"abad9a88ca0d6f8d","g":"50f3b47b1d62d456","name":"Some error","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload[1]","targetType":"msg","statusVal":"payload[1]","statusType":"auto","x":450,"y":360,"wires":[]},{"id":"10292665f314fc6c","type":"debug","z":"abad9a88ca0d6f8d","g":"7af0599b75ce96bf","name":"debug 3","active":true,"tosidebar":true,"console":false,"tostatus":true,"complete":"VideoToPlay[0]","targetType":"msg","statusVal":"VideoToPlay[0]","statusType":"auto","x":340,"y":520,"wires":[]},{"id":"b8fb5788d174801a","type":"link out","z":"abad9a88ca0d6f8d","g":"50f3b47b1d62d456","name":"link out 2","mode":"link","links":["0bdf25ad2db8b823"],"x":605,"y":300,"wires":[]},{"id":"0bdf25ad2db8b823","type":"link in","z":"abad9a88ca0d6f8d","g":"7af0599b75ce96bf","name":"link in 2","links":["b8fb5788d174801a"],"x":55,"y":480,"wires":[["0ee5394a19ec2f9d"]]},{"id":"49232eca1c1b13cc","type":"delay","z":"abad9a88ca0d6f8d","g":"ff624337f71e6c66","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":true,"allowrate":false,"outputs":1,"x":390,"y":660,"wires":[["751d51dfcded41f7"]]},{"id":"92bcad8254dbf885","type":"switch","z":"abad9a88ca0d6f8d","g":"ff624337f71e6c66","name":"if 'stop'","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"stop","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":240,"y":720,"wires":[["49232eca1c1b13cc"]]},{"id":"751d51dfcded41f7","type":"exec","z":"abad9a88ca0d6f8d","g":"ff624337f71e6c66","command":"pkill vlc","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"","x":560,"y":660,"wires":[[],[],[]]},{"id":"9e34b4a2c405b0b6","type":"rpi-gpio in","z":"abad9a88ca0d6f8d","g":"ff624337f71e6c66","name":"Key 2","pin":"20","intype":"up","debounce":"50","read":false,"bcm":true,"x":110,"y":640,"wires":[["49232eca1c1b13cc"]]},{"id":"01dbddaf82aed932","type":"inject","z":"abad9a88ca0d6f8d","g":"ff624337f71e6c66","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"date","x":110,"y":680,"wires":[["49232eca1c1b13cc"]]},{"id":"f4e3f433d82ec260","type":"mqtt in","z":"abad9a88ca0d6f8d","g":"ff624337f71e6c66","name":"1","topic":"frasier","qos":"2","datatype":"utf8","broker":"7ad2277394b478ef","nl":false,"rap":true,"rh":0,"inputs":0,"x":110,"y":720,"wires":[["92bcad8254dbf885"]]},{"id":"46541e988de47929","type":"comment","z":"abad9a88ca0d6f8d","g":"8e0e14a4a8ae4da8","name":"Shutdown","info":"","x":100,"y":820,"wires":[]},{"id":"3a1639b38e613dbb","type":"rpi-gpio in","z":"abad9a88ca0d6f8d","d":true,"g":"8e0e14a4a8ae4da8","name":"","pin":"27","intype":"up","debounce":"25","read":false,"bcm":true,"x":100,"y":860,"wires":[["67678a223dc5bf97"]]},{"id":"67678a223dc5bf97","type":"exec","z":"abad9a88ca0d6f8d","g":"8e0e14a4a8ae4da8","command":"sudo shutdown now","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"","x":520,"y":860,"wires":[[],[],[]]},{"id":"332bb8d08ca5a6d5","type":"catch","z":"abad9a88ca0d6f8d","g":"8e0e14a4a8ae4da8","name":"","scope":null,"uncaught":false,"x":100,"y":920,"wires":[["a34c56cbb99ba96c"]]},{"id":"a34c56cbb99ba96c","type":"debug","z":"abad9a88ca0d6f8d","g":"8e0e14a4a8ae4da8","name":"","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":250,"y":920,"wires":[]},{"id":"a9237caf8c926fae","type":"debug","z":"abad9a88ca0d6f8d","g":"7af0599b75ce96bf","name":"debug 1","active":true,"tosidebar":true,"console":false,"tostatus":true,"complete":"true","targetType":"full","statusVal":"VideoToPlay[0]","statusType":"auto","x":540,"y":480,"wires":[]},{"id":"52ea5801cb6006e9","type":"ui_button","z":"abad9a88ca0d6f8d","g":"50f3b47b1d62d456","name":"","group":"9d45a30a4bb6c499","order":2,"width":3,"height":1,"passthru":false,"label":"","tooltip":"","color":"","bgcolor":"","className":"","icon":"fa-play","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":110,"y":340,"wires":[["d07147c9e3559671"]]},{"id":"98c6b875a92557b4","type":"ui_button","z":"abad9a88ca0d6f8d","g":"ff624337f71e6c66","name":"","group":"9d45a30a4bb6c499","order":3,"width":3,"height":1,"passthru":false,"label":"","tooltip":"","color":"","bgcolor":"","className":"","icon":"fa-stop","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":250,"y":620,"wires":[["49232eca1c1b13cc"]]},{"id":"42220720a19274df","type":"function","z":"abad9a88ca0d6f8d","g":"50f3b47b1d62d456","name":"Pick specific","func":"// Retrieve the global array of file paths\nlet filePaths = global.get('filePaths');\n\n// Check if the array exists and has elements\nif (Array.isArray(filePaths) && filePaths.length > 0) {\n    // Generate a random index\n    let specificIndex = 234;\n\n    // Get the random file path\n    let specificFile = filePaths[specificIndex];\n\n    // Escape the file path or wrap it in quotes for safe usage in the command line\n    let escapedFilePath = `\"${specificFile.replace(/([\"\\\\$`])/g, '\\\\$1')}\"`;\n\n    // Assign it to msg.payload\n    msg.VideoToPlay = [escapedFilePath, null];\n} else {\n    // Handle the case where the array is empty or undefined\n    msg.VideoToPlay = [null, 'No files available to pick.'];\n}\n\nreturn msg;\n","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":220,"wires":[["c57c29c6c311acad"],[]]},{"id":"f4f72916cf154949","type":"inject","z":"abad9a88ca0d6f8d","g":"50f3b47b1d62d456","name":"Pick specific file","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":140,"y":220,"wires":[["42220720a19274df"]]},{"id":"e82f75d15068b8af","type":"ui_dropdown","z":"abad9a88ca0d6f8d","g":"c946b06561167483","name":"","label":"","tooltip":"","place":"Select Airplay speaker","group":"9d45a30a4bb6c499","order":4,"width":0,"height":0,"passthru":true,"multiple":false,"options":[],"payload":"","topic":"topic","topicType":"msg","className":"","x":770,"y":740,"wires":[["4663ad632b405356"]]},{"id":"exec_list_sinks","type":"exec","z":"abad9a88ca0d6f8d","g":"c946b06561167483","command":"XDG_RUNTIME_DIR=/run/user/1000 pactl info | grep \"Default Sink\" && XDG_RUNTIME_DIR=/run/user/1000 pactl list sinks | grep -E 'Name:|Description:'","addpay":false,"append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"List Sinks","x":760,"y":620,"wires":[["parse_sinks"],[],[]]},{"id":"parse_sinks","type":"function","z":"abad9a88ca0d6f8d","g":"c946b06561167483","name":"Parse Sink Data","func":"let output = msg.payload.split('\\n'); // Split input into lines\nlet sinks = [];\nlet defaultSink = \"\";\nlet currentSink = {}; // Temporary object to hold each sink's key-value pair\n\noutput.forEach(line => {\n    let trimmedLine = line.trim();\n\n    if (trimmedLine.startsWith(\"Default Sink:\")) {\n        // Extract the default sink name\n        defaultSink = trimmedLine.replace(\"Default Sink: \", \"\").trim();\n    } else if (trimmedLine.startsWith(\"Name:\")) {\n        // Store the Name value temporarily\n        currentSink.Name = trimmedLine.replace(\"Name: \", \"\").trim();\n    } else if (trimmedLine.startsWith(\"Description:\")) {\n        // Use the Description as the key and the Name as the value\n        let description = trimmedLine.replace(\"Description: \", \"\").trim();\n        sinks.push({ [description]: currentSink.Name });\n    }\n});\n\n// Assign sinks and the default sink to msg\nmsg.options = sinks;\nmsg.payload = defaultSink; // Default sink name\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":780,"y":680,"wires":[["d420207c890384ef","e82f75d15068b8af"]]},{"id":"inject_refresh","type":"inject","z":"abad9a88ca0d6f8d","g":"c946b06561167483","name":"Refresh Sinks","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":780,"y":560,"wires":[["exec_list_sinks"]]},{"id":"d420207c890384ef","type":"debug","z":"abad9a88ca0d6f8d","g":"c946b06561167483","name":"debug 6","active":true,"tosidebar":true,"console":true,"tostatus":true,"complete":"options","targetType":"msg","statusVal":"payload","statusType":"auto","x":970,"y":680,"wires":[]},{"id":"4663ad632b405356","type":"function","z":"abad9a88ca0d6f8d","g":"c946b06561167483","name":"Set Sink","func":"// Store the selected speaker and previous volume in flow context\nconst previousVolume = global.get(\"currentVolume\") || 50; // Default volume\nglobal.set(\"selectedSpeaker\", msg.payload);\nmsg.payload = `XDG_RUNTIME_DIR=/run/user/1000 pactl set-default-sink '${msg.payload}' && pactl set-sink-volume '${msg.payload}' ${previousVolume}%`;\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":940,"y":740,"wires":[["c346c5e47d77aea3"]]},{"id":"c346c5e47d77aea3","type":"exec","z":"abad9a88ca0d6f8d","g":"c946b06561167483","command":"","addpay":"payload","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"Exec","x":1130,"y":780,"wires":[[],[],[]]},{"id":"519df851393b7b2f","type":"function","z":"abad9a88ca0d6f8d","g":"c946b06561167483","name":"Set Volume","func":"// Adjust the volume for the current speaker\nconst selectedSpeaker = global.get(\"selectedSpeaker\");\nglobal.set(\"currentVolume\", msg.payload);\nif (selectedSpeaker) {\n    msg.payload = `XDG_RUNTIME_DIR=/run/user/1000 pactl set-sink-volume '${selectedSpeaker}' ${msg.payload}%`;\n    return msg;\n} else {\n    return null; // No speaker selected\n}","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":950,"y":780,"wires":[["c346c5e47d77aea3"]]},{"id":"bceef0c471bbe0b5","type":"ui_button","z":"abad9a88ca0d6f8d","g":"c946b06561167483","name":"Mute/Unmute","group":"9d45a30a4bb6c499","order":6,"width":1,"height":1,"passthru":false,"label":"","tooltip":"Mute toggle","color":"","bgcolor":"","className":"","icon":"volume_off","payload":"","payloadType":"str","topic":"","topicType":"str","x":780,"y":820,"wires":[["2b42826c5a303544"]]},{"id":"2b42826c5a303544","type":"function","z":"abad9a88ca0d6f8d","g":"c946b06561167483","name":"Toggle Mute","func":"// Toggle mute for the selected speaker\nconst selectedSpeaker = global.get(\"selectedSpeaker\");\nif (selectedSpeaker) {\n    msg.payload = `XDG_RUNTIME_DIR=/run/user/1000 pactl set-sink-mute '${selectedSpeaker}' toggle`;\n    return msg;\n} else {\n    return null; // No speaker selected\n}","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":950,"y":820,"wires":[["c346c5e47d77aea3"]]},{"id":"32744de9ed5bdf1e","type":"ui_slider","z":"abad9a88ca0d6f8d","g":"c946b06561167483","name":"Adjust Volume","label":"Volume","tooltip":"","group":"9d45a30a4bb6c499","order":5,"width":5,"height":1,"passthru":true,"outs":"all","topic":"","topicType":"str","min":0,"max":100,"step":1,"className":"","x":780,"y":780,"wires":[["519df851393b7b2f"]]},{"id":"exec_check_playing","type":"exec","z":"abad9a88ca0d6f8d","g":"f95d023b77de1473","command":"pgrep -x vlc","addpay":false,"append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"Check Player","x":770,"y":1020,"wires":[["switch_play_status"],[],[]]},{"id":"inject_play_status","type":"inject","z":"abad9a88ca0d6f8d","g":"f95d023b77de1473","name":"Check Status Every 1s","props":[],"repeat":"1","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":810,"y":960,"wires":[["exec_check_playing"]]},{"id":"switch_play_status","type":"switch","z":"abad9a88ca0d6f8d","g":"f95d023b77de1473","name":"Check Output","property":"payload","propertyType":"msg","rules":[{"t":"empty"},{"t":"nempty"}],"checkall":"true","repair":false,"outputs":2,"x":780,"y":1080,"wires":[["set_stopped"],["set_playing"]]},{"id":"set_stopped","type":"change","z":"abad9a88ca0d6f8d","g":"f95d023b77de1473","name":"Set Stopped","rules":[{"t":"set","p":"payload","pt":"msg","to":"Stopped","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":990,"y":1060,"wires":[["ui_play_status"]]},{"id":"set_playing","type":"change","z":"abad9a88ca0d6f8d","g":"f95d023b77de1473","name":"Set Playing","rules":[{"t":"set","p":"payload","pt":"msg","to":"Playing","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":990,"y":1100,"wires":[["ui_play_status"]]},{"id":"ui_play_status","type":"ui_text","z":"abad9a88ca0d6f8d","g":"f95d023b77de1473","group":"9d45a30a4bb6c499","order":7,"width":6,"height":1,"name":"Playback Status","label":"Playback Status:","format":"{{msg.payload}}","layout":"row-spread","className":"","style":false,"font":"","fontSize":"","color":"#000000","x":1190,"y":1080,"wires":[]},{"id":"2b68fbbeeddc4423","type":"function","z":"abad9a88ca0d6f8d","g":"84c542040034d2c2","name":"Ask TMDB","func":"// Replace with your TMDb API key, TV show ID, season and episode numbers\nconst apiKey = '3ed36bf0960941bd4a83371ecde96413';\nconst tvShowId = '3452'; // Example: '3452' for Frasier\nconst seasonNumber = msg.payload.season;\nconst episodeNumber = msg.payload.episode;\n\n// Construct the API URL\nmsg.url = `https://api.themoviedb.org/3/tv/${tvShowId}/season/${seasonNumber}/episode/${episodeNumber}?api_key=${apiKey}`;\n\n// Set HTTP method and headers if necessary\nmsg.method = \"GET\";\nmsg.headers = {};\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":950,"y":380,"wires":[["30a3fc1b1baa444b"]]},{"id":"30a3fc1b1baa444b","type":"http request","z":"abad9a88ca0d6f8d","g":"84c542040034d2c2","name":"","method":"use","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":950,"y":420,"wires":[["a1b72512a9617549"]]},{"id":"a1b72512a9617549","type":"json","z":"abad9a88ca0d6f8d","g":"84c542040034d2c2","name":"","property":"payload","action":"","pretty":false,"x":1090,"y":420,"wires":[["5f225c2ead2d6aef","d28276fbe4c28b7d","aeb9693662fa6b9d","3fb08d77d6d1e0c5"]]},{"id":"5f225c2ead2d6aef","type":"debug","z":"abad9a88ca0d6f8d","g":"84c542040034d2c2","name":"debug 2","active":true,"tosidebar":true,"console":true,"tostatus":true,"complete":"true","targetType":"full","statusVal":"payload","statusType":"auto","x":1270,"y":460,"wires":[]},{"id":"02f7f2b8ddfe2322","type":"ui_text","z":"abad9a88ca0d6f8d","g":"84c542040034d2c2","group":"9d45a30a4bb6c499","order":11,"width":"3","height":"1","name":"","label":"Season","format":"{{msg.payload.season}}","layout":"row-left","className":"","style":false,"font":"","fontSize":16,"color":"#000000","x":1160,"y":260,"wires":[]},{"id":"09e477eb3d366fc1","type":"ui_text","z":"abad9a88ca0d6f8d","g":"84c542040034d2c2","group":"9d45a30a4bb6c499","order":12,"width":"3","height":"1","name":"","label":"Episode","format":"{{msg.payload.episode}}","layout":"row-spread","className":"","style":false,"font":"","fontSize":16,"color":"#000000","x":1160,"y":300,"wires":[]},{"id":"d28276fbe4c28b7d","type":"ui_template","z":"abad9a88ca0d6f8d","g":"84c542040034d2c2","group":"9d45a30a4bb6c499","name":"Overview","order":13,"width":"6","height":"3","format":"<div style=\"word-wrap: break-word; white-space: pre-wrap; font-size: 14px;\">\n{{msg.payload.overview}}\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":1260,"y":420,"wires":[[]]},{"id":"778a3b03d7806aac","type":"ui_template","z":"abad9a88ca0d6f8d","group":"9d45a30a4bb6c499","name":"TV Logo","order":1,"width":3,"height":2,"format":"<div style=\"text-align: center;\">\n    <img src=\"/frasier.jpg\" alt=\"Frasier\" style=\"max-width: 50%; hight: auto;\">\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":1300,"y":540,"wires":[[]]},{"id":"aeb9693662fa6b9d","type":"ui_template","z":"abad9a88ca0d6f8d","g":"84c542040034d2c2","group":"9d45a30a4bb6c499","name":"Episode Image","order":10,"width":"6","height":"4","format":"<div style=\"display: flex; align-items: center; gap: 10px;\">\n    <img src=\"https://media.themoviedb.org/t/p/w454_and_h254_bestv2/{{msg.payload.still_path}}\"\n       style=\"max-width: 100%; height: auto; max-height: 254px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\"\n       alt=\"Still Image\" border=\"1px\"/>\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":1280,"y":340,"wires":[[]]},{"id":"3fb08d77d6d1e0c5","type":"ui_template","z":"abad9a88ca0d6f8d","g":"84c542040034d2c2","group":"9d45a30a4bb6c499","name":"Title","order":9,"width":0,"height":0,"format":"<div style=\"\n    word-wrap: break-word; \n    white-space: pre-wrap; \n    font-size: 16px; \n    font-family: Arial, sans-serif; \n    text-align: center; \n    color: #333; \n    padding: 10px; \n    background-color: #f9f9f9; \n    border-radius: 8px; \n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); \n    max-width: 90%; \n    margin: 10px auto;\n\">{{msg.payload.name}}\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":1250,"y":380,"wires":[[]]},{"id":"3bd79fd159945649","type":"ui_spacer","z":"abad9a88ca0d6f8d","name":"spacer","group":"9d45a30a4bb6c499","order":8,"width":"6","height":"1"},{"id":"7ad2277394b478ef","type":"mqtt-broker","name":"","broker":"192.168.111.216","port":"1883","clientid":"FrasierBox","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"autoUnsubscribe":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""},{"id":"9d45a30a4bb6c499","type":"ui_group","name":"Airplay","tab":"711bcbd88a5c848d","order":2,"disp":false,"width":"6","collapse":false,"className":""},{"id":"711bcbd88a5c848d","type":"ui_tab","name":"Home","icon":"dashboard","disabled":false,"hidden":true}]
